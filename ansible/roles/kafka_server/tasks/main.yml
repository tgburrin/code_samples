---
- copy:
    src: "{{ item }}"
    dest: "/etc/default/{{ item }}"
  with_items:
    - kafka.sh
    - zookeeper.sh

- unarchive:
    src: "https://downloads.apache.org/kafka/{{ kafka_version }}/kafka_{{ kafka_version_full }}.tgz"
    dest: /opt
    remote_src: yes
    validate_certs: no
    creates: "/opt/kafka_{{ kafka_version_full }}"

- lineinfile:
    path: "/opt/kafka_{{ kafka_version_full }}/config/server.properties"
    regexp: "^[#]?delete.topic.enable=true"
    line: "delete.topic.enable=true"

- lineinfile:
    path: "/opt/kafka_{{ kafka_version_full }}/config/server.properties"
    regexp: "^log.retention.hours"
    line: "log.retention.hours=24"

- lineinfile:
    path: "/opt/kafka_{{ kafka_version_full }}/config/server.properties"
    regexp: "^[#]?listeners=PLAINTEXT://:9092"
    line: "listeners=PLAINTEXT://:9092"

- lineinfile:
    path: "/opt/kafka_{{ kafka_version_full }}/config/server.properties"
    regexp: "^[#]?advertised.listeners="
    line: "advertised.listeners=PLAINTEXT://{{ ansible_fqdn }}:9092"

- lineinfile:
    path: "/opt/kafka_{{ kafka_version_full }}/bin/zookeeper-server-start.sh"
    insertafter: "^base_dir"
    firstmatch: yes
    line: "test -f /etc/default/zookeeper.sh && . /etc/default/zookeeper.sh"

- lineinfile:
    path: "/opt/kafka_{{ kafka_version_full }}/bin/kafka-server-start.sh"
    insertafter: "^base_dir"
    firstmatch: yes
    line: "test -f /etc/default/karka.sh && . /etc/default/karka.sh"

- command: "/opt/kafka_{{ kafka_version_full }}/bin/zookeeper-server-start.sh -daemon /opt/kafka_{{ kafka_version_full }}/config/zookeeper.properties"

- wait_for:
    port: 2181
    delay: 10
    state: started

- command: "/opt/kafka_{{ kafka_version_full }}/bin/kafka-server-start.sh -daemon /opt/kafka_{{ kafka_version_full }}/config/server.properties"

- shell: ./kafka-topics.sh --create --topic messages --if-not-exists --partitions 1 --replication-factor 1 --bootstrap-server localhost:9092
  args:
    chdir: "/opt/kafka_{{ kafka_version_full }}/bin"
