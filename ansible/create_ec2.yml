---
- hosts: localhost
  connection: local
  gather_facts: False

  vars:
    #ami_id: "ami-a4c7edb2"
    #ami_id: "ami-46c1b650" #CentOS 7 marketplace ami
    ami_id: "ami-09a41e26df464c548" # Debian 11
    instance_type: "t2.nano"

  tasks:
    - debug: var=build_hosts
    - include_tasks: make_ec2_instance.yml
      with_items:
         - { name: 'database', type: 'pgsql_database', num: 1 }
         # - { name: 'citus', type: 'citus_database', num: 3 }
         - { name: 'webserver', type: 'webserver', num: 1 }
         - { name: 'webclient', type: 'webclient', num: 1 }
         - { name: 'kafkaclient', type: 'kafka_client', num: 1 }
         - { name: 'kafka', type: 'kafka_queue', instance_type: "t2.small", num: 1 }
      loop_control:
        loop_var: inst
      when: build_hosts is defined and build_hosts == "true"
    - meta: refresh_inventory

- hosts: localhost
  tasks:
    - name: Collecting ec2 instance facts
      amazon.aws.ec2_instance_info:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "us-east-1"
      register: ec2_instances
    - name: Building hostlist
      set_fact:
              ec2hostlist: "{{ ec2hostlist|default([]) + [ { 'address': item.private_ip_address, 'name': item.tags.Name } ] }}"
      with_items: "{{ ec2_instances.instances }}"
      when: item.tags.automated == "true" and item.private_ip_address is defined
    - file: path=/tmp/ec2hosts.ns state=absent
    - lineinfile:
        dest: /tmp/ec2hosts.ns
        line: "server 172.16.1.5"
        state: present
        create: True
        backup: no
    - lineinfile:
        dest: /tmp/ec2hosts.ns
        backup: no
        line: "update delete {{ item.name }}.ec2.tgburrin.net. A"
      with_items: "{{ ec2hostlist }}"
      when: ec2hostlist is defined
    - lineinfile:
        dest: /tmp/ec2hosts.ns
        backup: no
        insertafter: EOF
        line: "update add {{ item.name }}.ec2.tgburrin.net. 600 A {{ item.address }}"
      with_items: "{{ ec2hostlist }}"
      when: ec2hostlist is defined
    - lineinfile:
        dest: /tmp/ec2hosts.ns
        backup: no
        insertafter: EOF
        line: "send"
    - shell: "nsupdate < /tmp/ec2hosts.ns"
      when: ec2hostlist is defined

- hosts: tag_automated_true
  roles:
    - common

- hosts: tag_instance_type_pgsql_database
  roles:
    - database

- hosts: tag_instance_type_kafka_client
  roles:
    - kafka_client

- hosts: tag_instance_type_webserver
  roles:
    - webserver

- hosts: tag_instance_type_kafka_queue
  roles:
    - kafka

- hosts: tag_instance_type_webclient
  roles:
    - webclient

- hosts: tag_instance_type_citus_database
  roles:
    - citus
